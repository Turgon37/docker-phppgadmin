# First stage : download phppgadmin + build it
FROM php:5.6-fpm-alpine3.8 as build_phppgadmin

ARG PHPPGADMIN_VERSION
ARG PHPPGADMIN_DOCUMENTROOT=/var/www

# Install phppadmin sources
RUN set -ex; \
    mkdir -p "${PHPPGADMIN_DOCUMENTROOT}" ; \
    curl --fail -o phppgadmin.tar.bz2 -L "https://github.com/phppgadmin/phppgadmin/releases/download/REL_$(echo ${PHPPGADMIN_VERSION} | tr '.' '-')/phpPgAdmin-${PHPPGADMIN_VERSION}.tar.bz2"; \
    tar -xjf phppgadmin.tar.bz2 --strip 1 --directory ${PHPPGADMIN_DOCUMENTROOT}


# Second stage : build final image
FROM php:5.6-fpm-alpine3.8

LABEL maintainer='Pierre GINDRAUD <pgindraud@gmail.com>'

ARG PHPPGADMIN_VERSION
ARG PHPPGADMIN_DOCUMENTROOT=/var/www

ENV POSTGRES_NAME=PostgreSQL
ENV POSTGRES_HOST=localhost
ENV POSTGRES_PORT=5432
ENV POSTGRES_DEFAULTDB=template1
ENV PHPPGADMIN_LOGIN_SECURITY=1
ENV PHPPGADMIN_OWNED_ONLY=0
ENV PHPPGADMIN_SHOW_COMMENTS=1
ENV PHPPGADMIN_SHOW_ADVANCED=0
ENV PHPPGADMIN_SHOW_SYSTEM=0
ENV PHPPGADMIN_SHOW_OIDS=0
ENV PHPPGADMIN_USE_XHTML_STRICT=0
ENV PHPPGADMIN_THEME=default
ENV PHPPGADMIN_PLUGINS=""

# Install dependencies
RUN set -ex; \
    apk --no-cache add \
      nginx \
      postgresql \
      supervisor \
    ; \
    apk add --no-cache --virtual .build-deps \
        $PHPIZE_DEPS \
        autoconf \
        coreutils \
        icu-dev \
        postgresql-dev \
    ; \
    docker-php-source extract ; \
    docker-php-ext-install \
       pgsql \
    ; \
    docker-php-source delete ; \
    runDeps="$( \
        scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions \
            | tr ',' '\n' \
            | sort -u \
            | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' \
    )"; \
    apk add --virtual .phppgadmin-phpext-rundeps $runDeps; \
    apk del .build-deps ; \
    mkdir -p /run/nginx ; \
    find "${PHPPGADMIN_DOCUMENTROOT}" -mindepth 1 -maxdepth 1 -not -name '.*' -and -not -name '..' | xargs rm -rfv

# Copy phppgadmin build
COPY --from=build_phppgadmin --chown=www-data:www-data ${PHPPGADMIN_DOCUMENTROOT} ${PHPPGADMIN_DOCUMENTROOT}

# Add some configurations files
COPY root/ /
COPY --chown=www-data:www-data config.inc.php /var/www/conf/

# Apply PHP FPM configuration
RUN ( \
      echo 'clear_env = no' ; \
    ) > /usr/local/etc/php/conf.d/environment.ini ; \
    ( \
      echo '[www]' ; \
      echo 'listen = /var/run/php-fpm.sock' ; \
      echo 'listen.owner = www-data' ; \
      echo 'listen.group = nginx' ; \
      echo 'listen.mode =' ; \
    ) > /usr/local/etc/php-fpm.d/zzz-nginx.conf ; \
    chmod -R g=rX,o=--- /var/www/* ; \
    addgroup nginx www-data

EXPOSE 80/tcp
WORKDIR "${PHPPGADMIN_DOCUMENTROOT}"

HEALTHCHECK --interval=5s --timeout=3s --retries=3 \
    CMD curl --silent --fail http://localhost:80 || exit 1

COPY /entrypoint.sh /

ENTRYPOINT ["/entrypoint.sh"]
CMD ["/usr/bin/supervisord", "--configuration", "/etc/supervisord.conf"]
